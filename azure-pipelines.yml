trigger:
- development

variables:
  tag: $(Build.BuildId)
  imageRepository: frontend
  dockerfilePath: $(Build.SourcesDirectory)/Dockerfile
  containerRegistry: bouacr.azurecr.io   # ACR login server

stages:
# ------------------ BUILD & PUSH ------------------
- stage: Build
  displayName: Build & Push Stage
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: ubuntu-latest
    steps:
    # 1️⃣ Setup QEMU + Buildx
    - script: |
        docker run --privileged --rm tonistiigi/binfmt --install all
        docker buildx create --name mybuilder --use || docker buildx use mybuilder
        docker buildx inspect --bootstrap
      displayName: Setup Buildx

    # 2️⃣ Login to ACR & Build/Push ARM64 image
    - script: |
        echo "$(DOCKER_PASSWORD)" | docker login $(containerRegistry) -u "$(DOCKER_USERNAME)" --password-stdin
        docker buildx build \
          --platform linux/arm64 \
          -t $(containerRegistry)/$(imageRepository):$(tag) \
          -t $(containerRegistry)/$(imageRepository):latest \
          -f $(dockerfilePath) \
          . --push
      env:
        DOCKER_USERNAME: $(servicePrincipalId)   # from your ACR service connection
        DOCKER_PASSWORD: $(servicePrincipalKey)
      displayName: Build & Push ARM64 Image

# ------------------ DEPLOY ------------------
- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - job: Deploy
    steps:
    # 1️⃣ Replace placeholder with BuildId in K8s manifest
    - script: |
        sed -i "s|__TAG__|$(Build.BuildId)|g" k8s/frontend.yml
        echo "✅ Updated image tag in manifest:"
        cat k8s/frontend.yml
      displayName: Update image tag in manifest

    # 2️⃣ Apply manifest to AKS
    - task: Kubernetes@1
      displayName: Deploy to AKS
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'bougroup'    # ✅ AKS service connection
        azureResourceGroup: 'bougroup'
        kubernetesCluster: 'bouaks'
        namespace: frontend
        command: apply
        useConfigurationFile: true
        configuration: $(Build.SourcesDirectory)/k8s/frontend.yml
